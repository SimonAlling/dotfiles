#!/usr/bin/env bash

readonly REGEX_CURRENT_VALUE=': current value = +([[:digit:]]+),'
readonly KEYWORD_UP="up"
readonly KEYWORD_DOWN="down"
readonly STEP=20
readonly MAX=100
readonly MIN=0

readonly ADDRESS=0x10

# On my system, monitors will be on /dev/i2c-n, where n âˆˆ [I2C_START, I2C_END].
# sudo i2cdetect -l
readonly I2C_START=4
readonly I2C_END=10

set -e

get_new_relative_brightness() {
    local i2c_number=$1
    local multiplier=$2
    local current_brightness=$(ddcutil --bus ${i2c_number} getvcp ${ADDRESS} | grep --only-matching -E "${REGEX_CURRENT_VALUE}" | sed -E "s%${REGEX_CURRENT_VALUE}%\1%")
    if [ -n "$current_brightness" ]; then
        echo $((current_brightness+$STEP*$multiplier))
    fi
}

try_to_set_brightness() {
    local i2c_number=$1
    local raw_desired_brightness=$2
    local valid_brightness=$raw_desired_brightness
    if ((valid_brightness > $MAX)); then valid_brightness=$MAX; fi
    if ((valid_brightness < $MIN)); then valid_brightness=$MIN; fi
    ddcutil \
        --noverify `# faster` \
        --bus ${i2c_number} \
        setvcp ${ADDRESS} ${valid_brightness} \
        2>&1 > /dev/null
}

maybe_set_brightness() {
    local i2c_number=$1
    local user_specified_brightness=$2
    if [ -n "$user_specified_brightness" ]; then
        try_to_set_brightness $i2c_number $user_specified_brightness
    else
        local new_relative_brightness=$(get_new_relative_brightness $i2c_number $multiplier)
        if [ -n "$new_relative_brightness" ]; then
            try_to_set_brightness $i2c_number $new_relative_brightness
        fi
    fi
}

shopt -s extglob # so +() patterns work
case "$1" in
    "${KEYWORD_UP}")
        multiplier=1
        ;;
    "${KEYWORD_DOWN}")
        multiplier=-1
        ;;
    +([[:digit:]]))
        user_specified_brightness=$1
        ;;
    *)
        echo "Usage: $0 [${KEYWORD_UP}|${KEYWORD_DOWN}|<brightness>]"
        exit 1;
        ;;
esac

for i in $(seq ${I2C_START} ${I2C_END}); do
    maybe_set_brightness "$i" "$user_specified_brightness" &
done
wait
